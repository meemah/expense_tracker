// Mocks generated by Mockito 5.3.2 from annotations
// in expense_tracker/test/income/income_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:expense_tracker/models/general_response.dart' as _i2;
import 'package:expense_tracker/models/income_model.dart' as _i5;
import 'package:expense_tracker/repository/income_repo.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGeneralResponse_0 extends _i1.SmartFake
    implements _i2.GeneralResponse {
  _FakeGeneralResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IncomeRepoImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockIncomeRepoImpl extends _i1.Mock implements _i3.IncomeRepoImpl {
  MockIncomeRepoImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.GeneralResponse> addIncome({
    required String? nameOfRevenue,
    required double? amount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addIncome,
          [],
          {
            #nameOfRevenue: nameOfRevenue,
            #amount: amount,
          },
        ),
        returnValue:
            _i4.Future<_i2.GeneralResponse>.value(_FakeGeneralResponse_0(
          this,
          Invocation.method(
            #addIncome,
            [],
            {
              #nameOfRevenue: nameOfRevenue,
              #amount: amount,
            },
          ),
        )),
      ) as _i4.Future<_i2.GeneralResponse>);
  @override
  _i4.Future<List<_i5.IncomeModel>> getIncome() => (super.noSuchMethod(
        Invocation.method(
          #getIncome,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.IncomeModel>>.value(<_i5.IncomeModel>[]),
      ) as _i4.Future<List<_i5.IncomeModel>>);
}

/// A class which mocks [IncomeModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockIncomeModel extends _i1.Mock implements _i5.IncomeModel {}

/// A class which mocks [GeneralResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeneralResponse extends _i1.Mock implements _i2.GeneralResponse {
  @override
  set message(String? _message) => super.noSuchMethod(
        Invocation.setter(
          #message,
          _message,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set token(String? _token) => super.noSuchMethod(
        Invocation.setter(
          #token,
          _token,
        ),
        returnValueForMissingStub: null,
      );
}
